name: Deploy

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      
      - run: npm ci
      
      - name: Build extension
        run: npm run build
        env:
          NODE_ENV: production
      
      - name: Build worker
        run: npx webpack --config webpack.worker.js --mode production
      
      - name: Run tests and generate screenshots
        uses: ./.github/workflows/test.yml
        with:
          screenshots: true
      
      - name: Update documentation
        run: |
          mkdir -p docs/screenshots/setup-flow
          cp -r tests/screenshots/* docs/screenshots/ || true
          
          echo "# Latest Test Results" > docs/test-results.md
          echo "" >> docs/test-results.md
          echo "Last updated: $(date)" >> docs/test-results.md
          echo "" >> docs/test-results.md
          echo "## Test Screenshots" >> docs/test-results.md
          echo "" >> docs/test-results.md
          
          for dir in docs/screenshots/*; do
            if [ -d "$dir" ]; then
              test_name=$(basename "$dir")
              echo "### $test_name" >> docs/test-results.md
              echo "" >> docs/test-results.md
              
              for img in "$dir"/*.png; do
                if [ -f "$img" ]; then
                  name=$(basename "$img")
                  rel_path="screenshots/$test_name/$name"
                  echo "#### ${name%.png}" >> docs/test-results.md
                  echo "![${name%.png}]($rel_path)" >> docs/test-results.md
                  echo "" >> docs/test-results.md
                fi
              done
            fi
          done
      
      - name: Commit documentation changes
        if: github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "openhands@all-hands.dev"
          git config --local user.name "openhands"
          git add docs
          git commit -m "Update documentation with latest screenshots" || exit 0
          git push
      
      - name: Package Extension
        run: |
          cd dist
          zip -r ../chronicle-sync.zip *
      
      - name: Upload build artifact
        uses: actions/upload-artifact@v4
        with:
          name: build-artifact
          path: |
            chronicle-sync.zip
            dist/
            worker/
          retention-days: 1

  deploy-pages:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/configure-pages@v4
      
      - uses: actions/upload-pages-artifact@v3
        with:
          path: './docs'
      
      - id: deployment
        uses: actions/deploy-pages@v4

  deploy-staging:
    needs: build
    if: github.ref == 'refs/heads/main'
    runs-on: ubuntu-latest
    environment: staging
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
      
      - name: Install Wrangler
        run: npm install -g wrangler@latest
      
      - name: Generate Wrangler Config
        run: ./scripts/generate-wrangler-config.sh
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PROD_DB_ID: ${{ secrets.PROD_DB_ID }}
          PROD_KV_ID: ${{ secrets.PROD_KV_ID }}
          STAGING_DB_ID: ${{ secrets.STAGING_DB_ID }}
          STAGING_KV_ID: ${{ secrets.STAGING_KV_ID }}
      
      - name: Deploy to Cloudflare Staging
        run: wrangler deploy --env staging
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      
      - name: Create Beta Release
        uses: softprops/action-gh-release@v1
        with:
          files: chronicle-sync.zip
          name: "Beta (Staging)"
          tag_name: beta
          prerelease: true
          body: |
            Beta version of Chronicle Sync extension connected to staging environment.
            This version is automatically updated when changes are merged to main.
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    needs: build
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    environment: production
    steps:
      - uses: actions/checkout@v4
      
      - uses: actions/download-artifact@v4
        with:
          name: build-artifact
      
      - name: Install Wrangler
        run: npm install -g wrangler@latest
      
      - name: Generate Wrangler Config
        run: ./scripts/generate-wrangler-config.sh
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          PROD_DB_ID: ${{ secrets.PROD_DB_ID }}
          PROD_KV_ID: ${{ secrets.PROD_KV_ID }}
      
      - name: Deploy to Cloudflare Production
        run: wrangler deploy --env production
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      
      - name: Create Production Release
        uses: softprops/action-gh-release@v1
        with:
          files: chronicle-sync.zip
          generate_release_notes: true
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}