name: Deploy

on:
  push:
    branches: [main]
    tags: ['v*']
  workflow_dispatch:

permissions:
  contents: write
  pages: write
  id-token: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Use Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
      
    - name: Build extension
      run: npm run build
      env:
        NODE_ENV: production
    
    - name: Build worker
      run: npx webpack --config webpack.worker.js --mode production
      
    - name: Run tests and generate screenshots
      uses: ./.github/workflows/test.yml
      with:
        screenshots: true
    
    - name: Update documentation
      run: |
        mkdir -p docs/screenshots/setup-flow
        cp -r tests/screenshots/* docs/screenshots/ || true
    
    - name: Package Extension
      run: |
        cd dist
        zip -r ../chronicle-sync.zip *
    
    - name: Upload build artifact
      uses: actions/upload-artifact@v4
      with:
        name: build-artifact
        path: |
          chronicle-sync.zip
          dist/
          worker/
        retention-days: 1

  deploy-staging:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main'
    environment: staging
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
    
    - name: Install Wrangler
      run: npm install -g wrangler@latest
    
    - name: Generate Wrangler Config
      run: ./scripts/generate-wrangler-config.sh
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        PROD_DB_ID: ${{ secrets.PROD_DB_ID }}
        PROD_KV_ID: ${{ secrets.PROD_KV_ID }}
        STAGING_DB_ID: ${{ secrets.STAGING_DB_ID }}
        STAGING_KV_ID: ${{ secrets.STAGING_KV_ID }}
    
    - name: Deploy to Cloudflare Staging
      run: wrangler deploy --env staging
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    
    - name: Create Beta Release
      uses: softprops/action-gh-release@v1
      with:
        files: chronicle-sync.zip
        name: "Beta (Staging)"
        tag_name: beta
        prerelease: true
        body: |
          Beta version of Chronicle Sync extension connected to staging environment.
          This version is automatically updated when changes are merged to main.
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  deploy-production:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/v')
    environment: production
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download build artifact
      uses: actions/download-artifact@v4
      with:
        name: build-artifact
    
    - name: Install Wrangler
      run: npm install -g wrangler@latest
    
    - name: Generate Wrangler Config
      run: ./scripts/generate-wrangler-config.sh
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
        PROD_DB_ID: ${{ secrets.PROD_DB_ID }}
        PROD_KV_ID: ${{ secrets.PROD_KV_ID }}
    
    - name: Deploy to Cloudflare Production
      run: wrangler deploy --env production
      env:
        CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
        CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
    
    - name: Create Production Release
      uses: softprops/action-gh-release@v1
      with:
        files: chronicle-sync.zip
        generate_release_notes: true
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}